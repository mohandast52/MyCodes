img {
    display: block;
    margin: 0 auto;
    padding-bottom: 15px;
}

// flexbox : for one dimention
// css-grid : for 2 dimention
.wrapper {
    div {
        padding: 5px;
    }
    >div:nth-child(even) {
        background-color: #eee;
    }
    >div:nth-child(odd) {
        background-color: rgba(250, 186, 186, 0.829);
    }
}

.example-1 {
    display: grid;
    /* 
    1st column will be 60% in width and other 40% !
    using this may cause mismatch in padding, margin. as we can see
    scroll bar down.
    */
    grid-template-columns: 60% 40%;
    /* gap between column */
    grid-column-gap: 10px;
    /* gap between rows */
    grid-row-gap: 10px; // grid-gap: 10px; /* 10px for both column and rows */
}

.example-2 {
    display: grid;
    /* instead of using percentages, we can use fractions */
    /* 
    grid-template-columns: 1fr 1fr 1fr; is the same as below.
    i.e repeat 3 times 1fr 
    (recommended to use 'fr') 
    */
    grid-template-columns: repeat(3, 1fr);
    grid-gap: 10px;
    /* it will have height 100px, but is the content goes beyond that..it will overflow 
    hence, minmax is used
    grid-auto-rows: 100px;
    */
    /* minmax(100px auto): mininum 100px and after that auto */
    grid-auto-rows: minmax(100px, auto);
}

.example-3 {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-gap: 10px;
    .nested {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        grid-gap: 5px;
        /* height of each nested grid will be 100px; */
        grid-auto-rows: 100px;
        >div {
            background-color: #a4fe98;
            text-align: center;
        }
    }
}

.example-4 {
    border: 5px solid #0e35f9;
    padding: 10px;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-gap: 10px;
    grid-auto-rows: 200px;
    justify-items: center;
    /* from left:  */
    align-items: center;
    /* from top: */
    .box {
        border: 2px solid red;
    }
    .box-1 {
        justify-self: left;
    }
    .box-2 {
        justify-self: right;
    }
    .box-3 {
        align-self: start;
    }
    .box-4 {
        align-self: end;
    }
}

.example-5 {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-auto-rows: 100px;
    grid-gap: 15px;
    .box {
        background-color: #3d76f0 !important;
        color: white;
        font-size: 36px;
    }
    .box-1 {
        /* grid-column: 1 / -1; goes from 1st to last column */
        /* from column 1 to 3 */
        grid-column: 1/3;
        grid-row: 1;
    }
    .box-2 {
        /* we can see the overlapping and tranparancy */
        background-color: #e83f3980 !important;
        grid-column: 2/3;
        grid-row: 1/3;
        border: 5px solid #c0001c;
    }
    .box-3 {
        grid-row: 2/4;
    }
    .box-5 {
        grid-row: 2/5;
    }
}

.example-6 {
    display: grid;
    /* gives more flexibility like bootstrap */
    grid-template-columns: repeat(12, 1fr);
    grid-template-rows: 40px 200px 40px;
    font-size: 24px;
    text-align: center;
    color: white;
    .box {
        // just to center the texts
        display: flex;
        align-items: center;
        justify-content: center;
    }
    .eg-6-layout-1 {
        background-color: #673AB7 !important;
        grid-column: 1/-1;
    }
    .eg-6-layout-2 {
        background-color: #757575 !important;
        grid-column: 1/3; // grid-row: 1/6;
    }
    .eg-6-layout-3 {
        background-color: #4CAF50 !important;
        grid-column: 3/-1;
    }
    .eg-6-layout-4 {
        background-color: #0288D1 !important;
        grid-column: 1/-1;
    }
}